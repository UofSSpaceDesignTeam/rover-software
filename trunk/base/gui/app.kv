# widget tree root that actually gets built at runtime
# definitions follow

AppRoot:

# App root widget
<AppRoot@BoxLayout>:
	orientation: "vertical"
	TabBar:
		size_hint: (None, None)
		size: (1024, 50)
	ScreenManager:
		id: sm
		SplashScreen:
			name: "splash"
		TelemetryScreen:
			name: "telemetry"
		NavigationScreen:
			name: "navigation"
		TurretScreen:
			name: "turret"
		DriveScreen:
			name: "drive" 
		ArmScreen:
			name: "arm"
		ImageScreen:
			name: "image"
		SettingsScreen:
			name: "settings"


# tab switcher bar
<TabBar@BoxLayout>:
	ActionBar:
		ActionView:
			use_separator: True
			ActionPrevious:
				size_hint: (None, None)
				size: (65, 50)
				app_icon: "gui/resource/icon.png"
				title: ""
				with_previous: False
				on_release: app.changeScreen("splash")
			ActionGroup:
				ActionButton:
					text: "Configuration"
					on_release: app.open_settings()
			ActionGroup:
				ActionButton:
					text: "Telemetry"
					on_release: app.changeScreen("telemetry")
			ActionGroup:
				ActionButton:
					text: "Navigation"
					on_release: app.changeScreen("navigation")
			ActionGroup:
				ActionButton:
					text: "Turret Camera"
					on_release: app.changeScreen("turret")
			ActionGroup:
				ActionButton:
					text: "Image Analysis"
					on_release: app.changeScreen("image")
			ActionGroup:
				ActionButton:
					text: "Arm Camera"
					on_release: app.changeScreen("arm")
			ActionGroup:
				ActionButton:
					text: "Drive Camera"
					on_release: app.changeScreen("drive")


# Mission time countdown
<MissionClock@ScatterLayout>:
	clock_text: "00:00:00"
	Label:
		text: root.clock_text
		bold: True
		font_size: 20

# telemetry / rover information tab
<TelemetryScreen@BoxLayout>:
	# Main Window
	GridLayout:
		cols: 3
		size_hint: (None, None)
		size: (root.size[0], root.size[1])

# map tab
<NavigationScreen@BoxLayout>:
	orientation: "vertical"
	# Map
	ScrollView:
		id: map
		zoom: 0.2
		size_hint: (None, None)
		size: (root.size[0], root.size[1] - 55)
		pos: (0, 55)
		AsyncImage:
			id: image
			pos: (0, 0)
			size_hint: (None, None)
			size: (self.texture_size[0] * self.parent.zoom, self.texture_size[1] * self.parent.zoom)
			allow_stretch: True
			keep_ratio: True
			source: app.mapImagePath
			# canvas:
				# Color:
					# rgba: (0,0,1,1)
				# Ellipse:
					# pos: (app.roverPosition[0] * root.zoom, app.roverPosition[1] * root.zoom)
					# size: (10, 10)

	# map view controls
	BoxLayout:
		pos: (root.size[0] / 2 - 100, 0)
		Button:
			size_hint: (None, None)
			size: (100, 50)
			text: "Zoom -"
			on_release: app.zoomOut()
		Button:
			size_hint: (None, None)
			size: (100, 50)
			text: "Zoom +"
			on_release: app.zoomIn()


# telephoto camera view tab (video player built in python)
<TurretScreen@BoxLayout>:
	FloatLayout:
		# static background image
		Image:
			pos: (0, 0)
			id: loadImg
			size: (root.size[0],root.size[1])
			allow_stretch: True
			keep_ratio: False
			source: "gui/resource/loading.jpg"


# wide-angle camera view tab (video player built in python)
<DriveScreen@BoxLayout>:
	FloatLayout:
		# static background image
		Image:
			pos: (0, 0)
			id: loadImg
			size: (root.size[0],root.size[1])
			allow_stretch: True
			keep_ratio: False
			source: "gui/resource/loading.jpg"


# arm-mounted camera view tab (video player built in python)
<ArmScreen@BoxLayout>:
	FloatLayout:
		# static background image
		Image:
			pos: (0, 0)
			id: loadImg
			size: (root.size[0],root.size[1])
			allow_stretch: True
			keep_ratio: False
			source: "gui/resource/loading.jpg"


# image analysis tab
<ImageScreen@BoxLayout>:


# app settings tab
<SettingsScreen@BoxLayout>:
	size: root.size

# startup splash screen tab
<SplashScreen@BoxLayout>:
	Image:
		size: (root.size[0], root.size[1])
		allow_stretch: True
		keep_ratio: True
		source: "gui/resource/splash.jpg"

