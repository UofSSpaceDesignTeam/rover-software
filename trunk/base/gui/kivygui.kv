#'''
#	Widget rules
#	These define often used groups of buttons/labels etc
#'''

###Buttons to select modes/controls
<CtrlButton@GridLayout>:
	cols: 2
	b_text: 'default'
	func: 'none'
	ind: (1, 0, 0, 1)
	
	#Button
	BoxLayout:
		orientation: 'vertical'
		Button:
			text: root.b_text
			on_release: app.buttonHandler(root.func)
	
	#Indicator
	BoxLayout:
		orientation: 'vertical'
		Button:
			background_color: root.ind
			size_hint: (0.1, 1)
		
###Buttons to perform a simple action
<ActButton@BoxLayout>:
	b_text: 'default'
	func: 'none'
	
	Button:
		text: root.b_text
		on_release: app.buttonHandler(root.func)
	
###Shows the status of the local and remote threads
<ThreadList@GridLayout>:
	#Two columns
	#Indicator
	#Label
	
###Shows mission clock abd other info
<MissionInfo@ScatterLayout>:
	clock_text: '00:00:00'
	Label:
		text: root.clock_text
		bold: True
		font_size: 20

###Map widget showing terrain and rover position
<NavMap@BoxLayout>:
	map_image: 'gui/campusmap.jpg'
	zoom: 1
	position: (3500, 1700)
	size_hint: (None, None)
	size: image.size
	#Map images are pretty big. We could perhaps find a way to speed up loading?
	AsyncImage:
		id: image
		pos: (0,0)
		size_hint: (None, None)
		size: (self.texture_size[0]*root.zoom, self.texture_size[1]*root.zoom)
		allow_stretch: True
		keep_ratio: True
		source: root.map_image
		canvas:
			#We should do some calculations to translate gps coordinates into pixel positions on image
			Color:
				rgba: (0,0,1,1)
			Ellipse:
				pos: (root.position[0]*root.zoom, root.position[1]*root.zoom)
				size: (10, 10)

###Map controls widget showing a list of waypoints, zoom controls and a waypoint adder.
<MapControls@GridLayout>:
	cols: 3
	BoxLayout:
		Button:
			text: 'Zoom In +'
			on_press: app.nav.ids.map.zoom += 0.1
		Button:
			text: 'Zoom Out -'
			on_press: app.nav.ids.map.zoom -= 0.1
	BoxLayout:
		Label:
			text: 'hullo'
	BoxLayout:
		ActButton:
			b_text: 'Show Rover On Map'
			func: 'on_map'

###Screen Manager (Root Widget)
GuiScreenManager:
    AppScreen:
    NavScreen:

#'''
#	Layout for the main application
#	Including video and rover controls
#'''
	
###Master Layout Class
<AppScreen>:
	#Action bar at top of app
	name: 'app'
	BoxLayout:
		FloatLayout:
			ActionBar:
				pos_hint: {'top':1}
				ActionView:
					use_separator: True
					ActionPrevious:
						title: 'USSTROVER GUI <<< NAV'
						with_previous: False
						on_press: app.changeScreen()
					ActionGroup:
						text: 'Rover Actions'
						ActionButton:
							text: 'Connect'
						ActionButton:
							text: 'Stop'
						ActionButton:
							text: 'Save Waypoint'
					ActionButton:
						text: 'Settings'
						on_press: app.open_settings()

			#Layered video and controls
			FloatLayout:
			
				#Video feed in background
				Video:
					size_hint: (None,None)
					pos: (40,-45)
					size: (root.size[0]+5-2*40,root.size[1]) #damn tab alignment...
					id: videoScreen
					source: 'http://ctc.monroeccc.edu/mjpg/video.mjpg'
					state: 'play'
					allow_stretch: True
					keep_ratio: False
					on_loaded: root.ids.loadImg.color = (1,1,1,0)
					on_eos: root.ids.loadImg.color = (1,1,1,1)
				
				#Loading Image when no video is displayed
				Image:
					id: loadImg
					pos: (0,-45)
					size: (root.size[0],root.size[1])
					allow_stretch: True
					keep_ratio: False
					source: 'gui/background2.jpg'
					
				#Main Window
				GridLayout:
					cols: 3
					size_hint: (None,None)
					pos: (0,-45)
					size: (root.size[0],root.size[1])
					
					#Left tabs with commands
					TabbedPanel:
						do_default_tab: False
						background_color: (0, 0, 0, 0)
						tab_pos: 'left_top'
						tab_width: (root.size[1]-45)/3
							
						TabbedPanelItem:
							text: 'Put Stuff Here'
						
						TabbedPanelItem:
							text: 'Camera Buttons'
							BoxLayout:
								orientation: 'vertical'
								size_hint: 1,.3
								CtrlButton:
									id: ArmCam
									b_text: 'Arm Camera'
									func: 'ac'

								CtrlButton:
									id: DriveCam
									b_text: 'Drive Camera'
									func: 'dc'
						
						TabbedPanelItem:
							text: 'Navigation'
							BoxLayout:
								Label:
									text: 'A compass here would be good'
									
						
					
					#Blank label to make space
					Label:
						text: ''
					
					#Right tabs with commands
					TabbedPanel:
						do_default_tab: False
						background_color: (0, 0, 0, 0)
						tab_pos: 'right_top'
						tab_width: (root.size[1]-45)/3

						TabbedPanelItem:
							text: 'Mission Info'
							ScatterLayout:
								size_hint: (1,.07)
								MissionInfo:
									id: mission

						TabbedPanelItem:
							text: 'More Stuff'
								
						TabbedPanelItem:
							text: 'Rover Controls'
							
#'''
#	Layout for the navigation application
#	Including mapping and path-finding controls
#'''

#This is an experimental declaration of a second screen
<NavScreen>:
	name: 'nav'
	BoxLayout:
		#Action bar at top of app
		FloatLayout:
			ActionBar:
				pos_hint: {'top':1}
				ActionView:
					use_separator: True
					ActionPrevious:
						title: 'USSTROVER NAV >>> GUI'
						with_previous: False
						on_press: app.changeScreen()
					ActionGroup:
						text: 'Rover Actions'
						ActionButton:
							text: 'Connect'
							on_press: app.nav.ids.map.zoom = 0.25
						ActionButton:
							text: 'Stop'
							on_press: app.nav.ids.map.zoom = 0.35
						ActionButton:
							text: 'Save Waypoint'
							on_press: app.nav.ids.map.zoom = 0.45
					ActionButton:
						text: 'Settings'
						on_press: app.open_settings()

			#Layered Map
			FloatLayout:
				
				#Map
				ScrollView:
					id: scroll_map
					pos: (40,104)
					size_hint: (None, None)
					size: (root.size[0]+5-2*40,root.size[1]-150)
					NavMap:
						id: map
						
				#Controls
				BoxLayout:
					pos:(42,0)
					size_hint: (None, None)
					size: (root.size[0]-2*40.1, 104)
					MapControls:
								
				#Main Window
				GridLayout:
					cols: 3
					size_hint: (None,None)
					pos: (0,-45)
					size: (root.size[0],root.size[1])
					
					#Left tabs with commands
					TabbedPanel:
						do_default_tab: False
						background_color: (0, 0, 0, 0)
						tab_pos: 'left_top'
						tab_width: (root.size[1]-45)/3
							
						TabbedPanelItem:
							text: 'Put Stuff Here'
						
						TabbedPanelItem:
							text: 'Camera Buttons'
							BoxLayout:
								orientation: 'vertical'
								size_hint: (1,.3)
								CtrlButton:
									id: ArmCam2
									b_text: 'Arm Camera'
									func: 'ac'

								CtrlButton:
									id: DriveCam2
									b_text: 'Drive Camera'
									func: 'dc'
						
						TabbedPanelItem:
							text: 'Navigation'
							BoxLayout:
								Label:
									text: 'A compass here would be good'
									
						
					
					#Blank label to make space
					Label:
						text: ''
					
					#Right tabs with commands
					TabbedPanel:
						do_default_tab: False
						background_color: (0, 0, 0, 0)
						tab_pos: 'right_top'
						tab_width: (root.size[1]-45)/3

						TabbedPanelItem:
							text: 'Mission Info'
							BoxLayout:
								size_hint: (1,.07)
								MissionInfo:
									id: mission2

						TabbedPanelItem:
							text: 'More Stuff'
								
						TabbedPanelItem:
							text: 'Rover Controls'